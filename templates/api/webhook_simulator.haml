{% extends "frame.html" %}
{% load smartmin i18n %}

{% block page-top %}
{% endblock %}

-block page-title
  -blocktrans with brand.name as brand
    {{ brand }} - API Simulator

-block content
  -block breadcrumbs
    %ul.breadcrumb
      %li
        %a{href:"{% url 'api' %}"}
          -blocktrans with brand.name as brand
            {{ brand }} API
        %span.divider &rsaquo;

      %li
        %a{href:"{% url 'api.webhook' %}"} WebHook
        %span.divider &rsaquo;

      %li
        %a.active{href:"{% url 'api.webhook_simulator' %}"} Simulator

      -if request.user.api_token
        %li.pull-right{style:"color: #666"}
          API Token: {{ request.user.api_token }}
      -else
        %li.pull-right Log in to get your API Token

  .page-header{ style: "position: relative;" }
    %h1 WebHook Simulator

  %p
    This simulator lets you send test messages exactly as they would come from {{ brand.name }}.  Once you set a webhook URL
    you can then pick any message to simulate.

  %p
    The simulator will work even if your webhook URL is on localhost, though
    in that case you will need to make sure to set a header of <code>Access-Control-Allow-Origin: *</code> in your
    response during testing because of Javascript security restrictions.

  %p
    You can configure the URL to use during simulation below. Once you are satisfied your webhook is working
    as expected, you can configure your WebHook by editing your Android settings.

  %form.form-horizontal{ style:"margin-top: 20px" }
    %fieldset
      .control-group
        %label.control-label URL
        .controls
          %input#url{ name:"url", type:"text", placeholder:"The URL you want simulated events delivered to" }

  -for endpoint in endpoints
    .event-title
      .pull-right= endpoint.title
      %span.event-name{ class:"event-{{endpoint.color}}" }= endpoint.event

    .event

      %table.table
        %form{ id: "form-{{ endpoint.event }}" }
          .tbody
            %tr
              %td.field event
              %td.input
                %input{ name:"event", value:"{{ endpoint.event }}", readonly:"true" }
              %td The type of this event, <code>{{ endpoint.event }}</code>

            -for field in endpoint.fields
              %tr
                %td.field= field.name
                %td.input
                  %input{ name:"{{ field.name }}", value:"{{ field.default }}"}
                %td {{ field.help }}


      .request-buttons
        %a{ href: '{% url "api.webhook" %}\#{{ endpoint.event }}' }
          %i View Full Documentation

        -if request.user.is_authenticated
          %a.btn.btn-primary.pull-right{ onclick:'send("{{ endpoint.event }}");' } POST
        -else
          .pull-right
            Log in to use the Simulator

      .request{ id:"request-{{ endpoint.event }}" }
        .pre-header REQUEST
        %pre.prettyprint{ id:"request-text-{{ endpoint.event }}" }

      .clearfix

      .response{ id:"response-{{ endpoint.event }}" }
        .pre-header RESPONSE
        %pre.prettyprint{ id:"response-text-{{ endpoint.event }}" }

-block extra-script
  {{ block.super }}
  <script src="{{ STATIC_URL }}rest_framework/js/prettify-min.js"></script>
  <script src="{{ STATIC_URL }}bower/URIjs/URI.js"></script>
  :javascript
    $(function(){
        $(".event-title").click(function(){
          $(this).next(".event").toggle();
        });
    });

    var response;

    function send(slug){
      var url = $("#url").val();

      if (!url){
        alert("You need to set a WebHook URL");
        return;
      }

      url = URI(url).toString();
      var formData = $("#form-" + slug).serialize();

      // set our data in our request pretty print
      var request = "POST " + url + "\n";
      request += formData;

      $("#request-text-" + slug).text(request);
      $("#request-" + slug).show();

      $("#response-text-" + slug).text("Making request..")
      $("#response-" + slug).show();

      prettyPrint();

      // if this is a localhost request, use AJAX to it
      if (url.indexOf("localhost") >= 0){
        $.ajax({ type: 'POST',
               url: url,
               data: formData,
               dataType: "text",
               success: function(data){
                 var data = "HTTP/1.0 200 SUCCESS\n" + data;
                 $("#response-" + slug).show();
                 $("#response-text-" + slug).text(data);
                 prettyPrint();
               },
               error: function(request, status, error){
                 response = request;

                 var data = "HTTP/1.0 ";
                 if (request.status == 0){
                   data = "Connection Error.  Please check your URL and make sure you server is up.  If you are pointing to "
                   data += "localhost you may need to add the header 'Access-Control-Allow-Origin: *' during testing."
                 } else {
                   data += request.status + " " + error + "\n \n" + request.responseText;
                 }

                 $("#response-" + slug).show();
                 $("#response-text-" + slug).text(data);
                 prettyPrint();
               }
        });
      }
      // this is a request to a real URL, we need to pass this off to the server
      else {
        $.ajax({ type: 'POST',
               url: '{% url "api.webhook_tunnel" %}',
               data: { "url": url, "data": formData },
               dataType: "text",
               success: function(data){
                 $("#response-" + slug).show();
                 $("#response-text-" + slug).text(data);
                 prettyPrint();
               },
               error: function(request, status, error){
                 response = request;

                 var data = "HTTP/1.0 ";
                 if (request.status == 0){
                   data = "Connection Error."
                 } else {
                   data += request.status + " " + error + "\n \n" + request.responseText;
                 }

                 $("#response-" + slug).show();
                 $("#response-text-" + slug).text(data);
                 prettyPrint();
               }
        });
      }
    }

    $.ajaxSetup({
      crossDomain: true,
      beforeSend: function(xhr, settings) {
        if (!(/.*localhost.*/.test(settings.url))){
          xhr.setRequestHeader("X-CSRFToken", csrftoken);
        }
      }
    });


-block extra-style
  {{ block.super }}
  <link rel="stylesheet" type="text/css" href="{{ STATIC_URL }}bower/codemirror/lib/codemirror.css"/>
  <link rel="stylesheet" type="text/css" href="{{ STATIC_URL }}rest_framework/css/prettify.css"/>
  :css
    .controls input[type="text"] {
      width: 600px;
    }

    .pre-header {
      border: 1px solid #ccc;
      border-bottom: 0px;
      padding: 2px 8px;
      color: black;
      background-color: #eee;
      font-family: monospace;
    }

    .request {
      display: none;
    }

    .response {
      margin-top: 10px;
      display: none;
    }

    .request-buttons {
      margin-top: 5px;
      margin-bottom: 5px;
      height: 35px;
    }

    select {
      width: 400px;
    }

    pre.prettyprint {
      margin-top: 0px;
      margin-bottom: 0px;

      font-family: monospace;
      font-size: inherit;
      white-space: pre;
      line-height: 110%;

      -webkit-border-radius: 0px;
      -moz-border-radius: 0px;
      border-radius: 0px;
    }

    .event-title {
      background-color: #eee;
      border: 1px solid #ccc;
      padding: 5px;
      margin-bottom: 10px;
      cursor: pointer;
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }

    .event {
      margin-bottom: 20px;
      display: none;
    }

    .event table {
      margin-bottom: 10px;
    }

    .event-green {
      background-color: #058C40;
    }

    .event-blue {
      background-color: #1793cd;
    }

    .event-red {
      background-color: #c6211e;
    }

    .event-purple {
      background-color: #551A8B;
    }

    .event-name {
      color: #eee;
      padding: 3px;
      padding-left: 7px;
      padding-right: 7px;
      margin-right: 5px;
      font-family: monospace;
    }

    td.field.field-required {
      color: black;
    }

    td.field {
      width: 100px;
      text-align: right;
      font-family: monospace;
      font-weight: bold;
      color: #666;
    }

    td.input {
      width: 360px;
    }

    .field-title {
      font-weight: bold;
    }

    .warning {
      position: absolute;
      right: 0px;
      bottom: 5px;
      font-weight: bold;
    }

    .str, .atv {
       color: teal;
    }


